// Defines
#include <stddef.h>
#include <stdio.h>
#include "system.h"
#include "io.h"
#include <unistd.h>
#include <string.h>
#include "altera_up_avalon_ps2.h"
#include "altera_up_ps2_keyboard.h"
#include "altera_avalon_pio_regs.h" 	// to use PIO functions
#include "alt_types.h"					// alt_u32 is a kind of alt_types
#include "sys/alt_irq.h" 				// to register interrupts

/* Scheduler includes. */
#include "freertos/FreeRTOS.h"
#include "freertos/task.h"
#include "freertos/queue.h"
#include "main.h"


void ps2_isr(void* ps2_device, alt_u32 id){
	unsigned char byte;
	alt_up_ps2_read_data_byte_timeout(ps2_device, &byte);
	printf("Scan code: %x\n", byte);
}


int main(void)
{
	// Create the tasks]
	printf("Welcome to NIOSII\n");

	alt_up_ps2_dev * ps2_device = alt_up_ps2_open_dev(PS2_NAME);

	if(ps2_device == NULL){
		printf("can't find PS/2 device\n");
		return 1;
	}

	alt_up_ps2_enable_read_interrupt(ps2_device);
	alt_irq_register(PS2_IRQ, ps2_device, ps2_isr);

	xTaskCreate( taskone, "task1", configMINIMAL_STACK_SIZE, NULL, 1, NULL);

	vTaskStartScheduler();
	/* Will only reach here if there is insufficient heap available to start
	 the scheduler. */
	while(1){}
}

void createTasks()
{

}

void startInterrupts()
{
	
}


